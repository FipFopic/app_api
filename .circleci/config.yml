version: 2.1

jobs:
  checkout:
    working_directory: ~/app_api
    docker:
      - image: cimg/node:18.11.0
    steps:
      - checkout
      - save_cache:
          key: v0-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/app_api
  dependencies:
    working_directory: ~/app_api
    docker:
      - image: cimg/node:18.11.0
    steps:
      - restore_cache:
          key: v0-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v0-node-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: v0-node-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/app_api/node_modules
  lint:
    working_directory: ~/app_api
    docker:
      - image: cimg/node:18.11.0
    steps:
      - restore_cache:
          key: v0-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v0-node-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: ESLint
          command: npm run lint
      - run:
          name: Prettier
          command: npm run prettier:check
#  test:
#    working_directory: ~/app_api
#    docker:
#      - image: cimg/node:18.11.0
#      - image: cimg/postgres:14.5
#        environment:
#          POSTGRES_HOST: localhost
#          POSTGRES_PORT: 5432
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: postgres
#    steps:
#      - restore_cache:
#          key: v0-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
#      - restore_cache:
#          key: v0-node-{{ .Branch }}-{{ checksum "package.json" }}
#      - run:
#          name: Test
#          command: npm run test
#      - run:
#          name: Copy .env
#          command: cp .env.dist .env
#      - run:
#          name: Wait for Postgres to start
#          command: dockerize -wait tcp://localhost:5432 -timeout 1m
#      - run:
#          name: E2E
#          command: npm run test:e2e
  build:
    working_directory: ~/app_api
    docker:
      - image: cimg/node:18.11.0
    steps:
      - restore_cache:
          key: v0-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v0-node-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Build
          command: npm run build
      - save_cache:
          key: v0-build-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/cimg/dist/cimg

workflows:
  version: 2
  ci:
    jobs:
      - checkout
      - dependencies:
          requires:
            - checkout
      - lint:
          requires:
            - dependencies
#      - test:
#          requires:
#            - lint
      - build:
          requires:
            - lint
